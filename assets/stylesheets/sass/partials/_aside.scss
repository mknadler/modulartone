aside {
	height: 100%;
	float: left;
	position: relative;
	overflow: hidden;
	transition: width 1s ease-in-out;
}

.interval {
	@include center-parent;
	height: 10%;
	display: block;
	text-transform: uppercase;
	margin-right: -18px;
	text-align: left;
	@include rem(16);
	font-family: $effra;
	font-weight: 500;
	&:nth-child(2n){
		background: #8c8b8b;
	}
	&:nth-child(2n-1){
		background: #9e9e9e;
	}
	span {
		color: #cccccc;
		transition: padding-left 1s ease-in-out, font-size 1s ease-in-out;
		@include rem(54, padding-left);
	}
}

header {
		background: #e3e4e5;
		position: relative;
		z-index: 0;
		h1 {
			transition: padding-left 1s ease-in-out;
			@include rem(54, padding);
		}
		h1 span {
			font-family: $effra;
			@include rem(54);
			font-weight: 700;
			text-transform: uppercase;
			&:nth-of-type(1){
				color: #cccccc;
			}
			&:nth-of-type(2){
				color: #9e9e9e;
			}
		}
}

svg.bolt {
	transition: all 1s ease-in-out;
	position: fixed;
	left: 46.37%;
	top: 45%;
	z-index: 10;
}


body.majortenth, body.majoreleventh, body.majortwelfth, body.doubleoctave {
	
	.interval span {
		transition: padding-left 1s ease-in-out, font-size 1s ease-in-out;
		@include rem(16, padding-left);
		@include rem(12);
		}

	.interval span:after{
		@include rem(12);
	}

	header h1 {
		@include rem(16, padding-left);
		span {
			@include rem(44);
		}
	}

}

// Isn't it beautiful?
// It's like a waterfall!
// In the future, maybe combine this list
// and $scales (in /modules/_scale) into one map?
// And/or refactor this into a mixin
// and move it to _scale?
@each $number, $ratios in 	(1, '15:16'),
							(2, '8:9'),
							(3, '5:6'),
							(4, '4:5'),
							(5, '3:4'),
							(6, '1:âˆš2'),
							(7, '2:3'),
							(8, '5:8'),
							(9, '1:1.618'),
							(10, '3:5'),
							(11, '9:16'),
							(12, '8:15'),
							(13, '1:2'),
							(14, '2:5'),
							(15, '3:8'),
							(16, '1:3'),
							(17, '1:4') {
	.interval:nth-of-type(#{$number}){
		span:after{
			content: ' (#{$ratios})';
		}
	}

}
.interval:after{
	@include rem(6, margin-left);
	color: #b2b2b2;
	text-decoration: none;
	display: inline-block;
}

// Not the most semantic, but it's a way to hide the scrollbar
// in combination with the negative margin on the <a>s
.scroll {
	width: 100%;
	height: 100%;
	overflow: auto;
	padding-right: 20px;
}